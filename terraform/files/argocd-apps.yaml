resources:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: private-helm-repo-remote
      namespace: argocd
      labels:
        argocd.argoproj.io/secret-type: repository
    stringData:
      type: helm
      url: https://chartmuseum.wazuh.adorsys.team
      name: private-repo-helm

  - apiVersion: v1
    kind: Secret
    metadata:
      name: bitnami-helm-repo
      namespace: argocd
      labels:
        argocd.argoproj.io/secret-type: repository
    stringData:
      type: helm
      name: bitnami
      url: https://charts.bitnami.com/bitnami

  - apiVersion: v1
    kind: Secret
    metadata:
      name: private-helm-repo-remote-creds
      namespace: argocd
      labels:
        argocd.argoproj.io/secret-type: repo-creds
    stringData:
      type: helm
      url: https://chartmuseum.wazuh.adorsys.team
      username: ${wazuh_helm_username}
      password: ${wazuh_helm_password}

  - apiVersion: argoproj.io/v1alpha1
    kind: AppProject
    metadata:
      name: applications
      namespace: argocd
      # Finalizer that ensures that project is not deleted until it is not referenced by any application
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      # Project description
      description: Application Project

      # Allow manifests to deploy from any Git repos
      sourceRepos:
        - '*'

      # Only permit applications to deploy to the guestbook namespace in the same cluster
      # Destination clusters can be identified by 'server', 'name', or both.
      destinations:
        - namespace: '*'
          server: https://kubernetes.default.svc
          name: in-cluster

      # Deny all cluster-scoped resources from being created, except for Namespace
      clusterResourceWhitelist:
        - group: '*'
          kind: '*'

      # Allow all namespaced-scoped resources to be created, except for ResourceQuota, LimitRange, NetworkPolicy
      namespaceResourceBlacklist:
        - group: ''
          kind: ResourceQuota
        - group: ''
          kind: LimitRange
        - group: ''
          kind: NetworkPolicy

      # Deny all namespaced-scoped resources from being created, except for Deployment and StatefulSet
      namespaceResourceWhitelist:
        - group: '*'
          kind: '*'

      # Enables namespace orphaned resource monitoring.
      orphanedResources:
        warn: false

      roles: []

      # Sync windows restrict when Applications may be synced. https://argo-cd.readthedocs.io/en/stable/user-guide/sync_windows/
      syncWindows: []
      #        - kind: allow
      #          schedule: '10 1 * * *'
      #          duration: 1h
      #          applications:
      #            - '*-prod'
      #          manualSync: true
      #        - kind: deny
      #          schedule: '0 22 * * *'
      #          duration: 1h
      #          namespaces:
      #            - default

      # By default, apps may sync to any cluster specified under the `destinations` field, even if they are not
      # scoped to this project. Set the following field to `true` to restrict apps in this cluster to only clusters
      # scoped to this project.
      permitOnlyProjectScopedClusters: false

      # When using Applications-in-any-namespace, this field determines which namespaces this AppProject permits
      # Applications to reside in. Details: https://argo-cd.readthedocs.io/en/stable/operator-manual/app-any-namespace/
      sourceNamespaces:
        - 'argocd-apps-*'
        - 'argocd'

  - apiVersion: argoproj.io/v1alpha1
    kind: AppProject
    metadata:
      name: infrastructure
      namespace: argocd
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      description: Infrastructure management tools
      sourceRepos:
        - '*'
      destinations:
        - namespace: '*'
          server: https://kubernetes.default.svc
      clusterResourceWhitelist:
        - group: '*'
          kind: '*'
      clusterResourceBlacklist: []
      namespaceResourceBlacklist:
        - group: ''
          kind: ResourceQuota
        - group: ''
          kind: LimitRange
        - group: ''
          kind: NetworkPolicy
      namespaceResourceWhitelist:
        - group: '*'
          kind: '*'
      orphanedResources: {}
      roles: []
      syncWindows:
        - kind: allow
          schedule: '10 1 * * *'
          duration: 1h
          applications:
            - '*-infra'
            - 'wazuh-secrets-*'
          manualSync: true
      permitOnlyProjectScopedClusters: false
      sourceNamespaces:
        - argocd

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: wazuh-${environment}
      namespace: argocd
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      project: applications
      source:
        repoURL: https://chartmuseum.wazuh.adorsys.team
        targetRevision: '0.2.25'
        chart: wazuh-helm
        helm:
          valueFiles:
            - values.yaml
            - values-k3s.yaml
          valuesObject:
            nameOverride: 'wazuh'
            global:
              domain: ${environment}.wazuh.adorsys.team
            cluster:
              secret:
                enabled: true
              rootCaSecretName: 'ext-wazuh-root-ca-secrets'
              auth:
                secretName: 'ext-wazuh-cluster-auth-secrets'
                secretKey: 'CLUSTER_AUTH_KEY'

            worker:
              affinity:
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                    - weight: 100
                      podAffinityTerm:
                        topologyKey: kubernetes.io/hostname

            indexer:
              authSecret: 'ext-wazuh-indexer-secrets'

            apiCred:
              authSecret: 'ext-wazuh-api-credentials'

            dashboard:
              authSecret: 'ext-wazuh-dashboard-secrets'
              ingress:
                annotations:
                  alb.ingress.kubernetes.io/load-balancer-name: dev-lb
      destination:
        server: https://kubernetes.default.svc
        namespace: wazuh
      syncPolicy:
        automated:
          prune: true
          selfHeal: true

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: wazuh-secrets-${environment}
      namespace: argocd
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      project: infrastructure
      source:
        repoURL: https://github.com/ADORSYS-GIS/wazuh-eksa
        targetRevision: ${target_revision}
        path: apps/add-ons
      destination:
        server: https://kubernetes.default.svc
        namespace: wazuh
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
